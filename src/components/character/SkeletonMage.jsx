/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/models/SkeletonMage/SkeletonMage.glb 
*/

import React, {useEffect} from 'react'
import {useGraph} from '@react-three/fiber'
import {useGLTF, useAnimations} from '@react-three/drei'
import {SkeletonUtils} from 'three-stdlib'
import {useGameStore} from "../../store.js";

const anim = {
    0: "1H_Melee_Attack_Chop",
    1: "1H_Melee_Attack_Jump_Chop",
    2: "1H_Melee_Attack_Slice_Diagonal",
    3: "1H_Melee_Attack_Slice_Horizontal",
    4: "1H_Melee_Attack_Stab",
    5: "1H_Ranged_Aiming",
    6: "1H_Ranged_Reload",
    7: "1H_Ranged_Shoot",
    8: "1H_Ranged_Shooting",
    9: "2H_Melee_Attack_Chop",
    10: "2H_Melee_Attack_Slice",
    11: "2H_Melee_Attack_Spin",
    12: "2H_Melee_Attack_Spinning",
    13: "2H_Melee_Attack_Stab",
    14: "2H_Melee_Idle",
    15: "2H_Ranged_Aiming",
    16: "2H_Ranged_Reload",
    17: "2H_Ranged_Shoot",
    18: "2H_Ranged_Shooting",
    19: "Block",
    20: "Block_Attack",
    21: "Block_Hit",
    22: "Blocking",
    23: "Cheer",
    24: "Death_A",
    25: "Death_A_Pose",
    26: "Death_B",
    27: "Death_B_Pose",
    28: "Death_C_Pose",
    29: "Death_C_Skeletons",
    30: "Death_C_Skeletons_Resurrect",
    31: "Dodge_Backward",
    32: "Dodge_Forward",
    33: "Dodge_Left",
    34: "Dodge_Right",
    35: "Dualwield_Melee_Attack_Chop",
    36: "Dualwield_Melee_Attack_Slice",
    37: "Dualwield_Melee_Attack_Stab",
    38: "Hit_A",
    39: "Hit_B",
    40: "Idle",
    41: "Idle_Combat",
    42: "Interact",
    43: "Jump_Full_Long",
    44: "Jump_Full_Short",
    45: "Jump_Idle",
    46: "Jump_Start",
    47: "Jump_Land",
    48: "Lie_Down",
    49: "Lie_Idle",
    50: "Lie_Pose",
    51: "Lie_StandUp",
    52: "PickUp",
    53: "Running_A",
    54: "Running_B",
    55: "Running_C",
    56: "Running_Strafe_Left",
    57: "Running_Strafe_Right",
    58: "Sit_Chair_Down",
    59: "Sit_Chair_Idle",
    60: "Sit_Chair_Pose",
    61: "Sit_Floor_Down",
    62: "Sit_Floor_Idle",
    63: "Sit_Floor_Pose",
    64: "Sit_Chair_StandUp",
    65: "Sit_Floor_StandUp",
    66: "Skeleton_Inactive_Standing_Pose",
    67: "Skeletons_Awaken_Floor",
    68: "Skeletons_Awaken_Floor_Long",
    69: "Skeletons_Inactive_Floor_Pose",
    70: "Skeletons_Awaken_Standing",
    71: "Spawn_Air",
    72: "Spawn_Ground",
    73: "Spawn_Ground_Skeletons",
    74: "Spellcast_Long",
    75: "Spellcast_Raise",
    76: "Spellcast_Shoot",
    77: "Spellcast_Summon",
    78: "Spellcasting",
    79: "Taunt",
    80: "Taunt_Longer",
    81: "Throw",
    82: "Unarmed_Idle",
    83: "Unarmed_Melee_Attack_Kick",
    84: "Unarmed_Melee_Attack_Punch_A",
    85: "Unarmed_Melee_Attack_Punch_B",
    86: "Unarmed_Pose",
    87: "Use_Item",
    88: "Walking_A",
    89: "Walking_B",
    90: "Walking_Backwards",
    91: "Walking_C",
    92: "Walking_D_Skeletons",
    93: "Idle_B",
}

export function SkeletonMage(props) {
    const group = React.useRef()
    const {scene, animations} = useGLTF('./models/SkeletonMage/SkeletonMage.glb')
    const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
    const {nodes, materials} = useGraph(clone)
    const {actions} = useAnimations(animations, group)

    const characterState = useGameStore((state) => state.characterState)

    useEffect(() => {
        actions[characterState].reset().play()
        return () => {
            actions[characterState].fadeOut(0.2)
        }
    }, [characterState, actions])

    return (
        <group ref={group} {...props} dispose={null}>
            <group name="Root_Scene">
                <group name="RootNode">
                    <group name="Rig" scale={100}>
                        <primitive object={nodes.root}/>
                    </group>
                    <skinnedMesh name="Skeleton_Mage_ArmLeft" geometry={nodes.Skeleton_Mage_ArmLeft.geometry}
                                 material={materials.skeleton} skeleton={nodes.Skeleton_Mage_ArmLeft.skeleton}
                                 scale={100}/>
                    <skinnedMesh name="Skeleton_Mage_ArmRight" geometry={nodes.Skeleton_Mage_ArmRight.geometry}
                                 material={materials.skeleton} skeleton={nodes.Skeleton_Mage_ArmRight.skeleton}
                                 scale={100}/>
                    <skinnedMesh name="Skeleton_Mage_Body" geometry={nodes.Skeleton_Mage_Body.geometry}
                                 material={materials.skeleton} skeleton={nodes.Skeleton_Mage_Body.skeleton}
                                 scale={100}/>
                    <skinnedMesh name="Skeleton_Mage_Eyes" geometry={nodes.Skeleton_Mage_Eyes.geometry}
                                 material={materials.Glow} skeleton={nodes.Skeleton_Mage_Eyes.skeleton}
                                 position={[0, 1.216, 0]} scale={100}/>
                    <skinnedMesh name="Skeleton_Mage_Jaw" geometry={nodes.Skeleton_Mage_Jaw.geometry}
                                 material={materials.skeleton} skeleton={nodes.Skeleton_Mage_Jaw.skeleton}
                                 position={[0, 1.312, -0.033]} scale={100}/>
                    <skinnedMesh name="Skeleton_Mage_LegLeft" geometry={nodes.Skeleton_Mage_LegLeft.geometry}
                                 material={materials.skeleton} skeleton={nodes.Skeleton_Mage_LegLeft.skeleton}
                                 scale={100}/>
                    <skinnedMesh name="Skeleton_Mage_LegRight" geometry={nodes.Skeleton_Mage_LegRight.geometry}
                                 material={materials.skeleton} skeleton={nodes.Skeleton_Mage_LegRight.skeleton}
                                 scale={100}/>
                    <skinnedMesh name="Skeleton_Mage_Skull" geometry={nodes.Skeleton_Mage_Skull.geometry}
                                 material={materials.skeleton} skeleton={nodes.Skeleton_Mage_Skull.skeleton}
                                 position={[0, 1.216, 0]} scale={100}/>
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('./models/SkeletonMage/SkeletonMage.glb')
